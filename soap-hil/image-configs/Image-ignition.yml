apiVersion: phenix.sandia.gov/v1
kind: Image
metadata:
    name: ignition
    created: "2024-01-05T10:12:55-06:00"
    updated: "2024-02-08T12:25:55-06:00"
spec:
    compress: true
    deb_append: ' --components=main,restricted,universe,multiverse'
    format: qcow2
    include_miniccc: false
    include_protonuke: false
    mirror: http://us.archive.ubuntu.com/ubuntu/
    overlays: null
    packages:
        - initramfs-tools
        - net-tools
        - isc-dhcp-client
        - openssh-server
        - init
        - iputils-ping
        - vim
        - less
        - netbase
        - curl
        - ifupdown
        - dbus
        - linux-image-generic
        - linux-headers-generic
        - xorg
        - xinit
        - dbus-x11
        - libpython3-stdlib
        - libexpat1
        - zlib1g
        - libc6
        - python3-minimal
        - python3
        - python3-ply
        - python3-pycparser
        - python3-cffi
        - python3-cffi-backend
        - falkon
        - xubuntu-core
        - xserver-xorg
        - xserver-xorg-input-all
        - xserver-xorg-video-qxl
        - xserver-xorg-video-vesa
        - qemu-guest-agent

    ramdisk: false
    release: jammy
    script_order:
        - POSTBUILD_GUI
        - POSTBUILD_APT_CLEANUP
        - POSTBUILD_NO_ROOT_PASSWD
        - POSTBUILD_PHENIX_HOSTNAME
        - POSTBUILD_PHENIX_BASE
    scripts:
        POSTBUILD_APT_CLEANUP: |
            apt clean || apt-get clean || echo "unable to clean apt cache"
        POSTBUILD_GUI: |
            cat > /etc/apt/sources.list.d/updates.list <<EOF
            deb http://us.archive.ubuntu.com/ubuntu jammy-backports main restricted universe multiverse
            deb http://us.archive.ubuntu.com/ubuntu jammy-updates main restricted universe multiverse
            deb http://us.archive.ubuntu.com/ubuntu jammy-security main restricted universe multiverse
            EOF
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install -y xubuntu-core epiphany-browser
        POSTBUILD_NO_ROOT_PASSWD: |
            sed -i 's/nullok_secure/nullok/' /etc/pam.d/common-auth
            sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's/#PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
            sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's/PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
            passwd -d root
        POSTBUILD_PHENIX_BASE: |
            cat > /etc/systemd/system/miniccc.service <<EOF
            [Unit]
            Description=miniccc
            [Service]
            ExecStart=/opt/minimega/bin/miniccc -v=false -serial /dev/virtio-ports/cc -logfile /var/log/miniccc.log
            [Install]
            WantedBy=multi-user.target
            EOF
            cat > /etc/systemd/system/phenix.service <<EOF
            [Unit]
            Description=phenix startup service
            After=network.target systemd-hostnamed.service
            [Service]
            Environment=LD_LIBRARY_PATH=/usr/local/lib
            ExecStart=/usr/local/bin/phenix-start.sh
            RemainAfterExit=true
            StandardOutput=journal
            Type=oneshot
            [Install]
            WantedBy=multi-user.target
            EOF
            mkdir -p /etc/systemd/system/multi-user.target.wants
            ln -s /etc/systemd/system/miniccc.service /etc/systemd/system/multi-user.target.wants/miniccc.service
            ln -s /etc/systemd/system/phenix.service /etc/systemd/system/multi-user.target.wants/phenix.service
            mkdir -p /usr/local/bin
            cat > /usr/local/bin/phenix-start.sh <<EOF
            #!/bin/bash
            for file in /etc/phenix/startup/*; do
            	echo \$file
            	bash \$file
            done
            EOF
            chmod +x /usr/local/bin/phenix-start.sh
            mkdir -p /etc/phenix/startup
        POSTBUILD_PHENIX_HOSTNAME: |
            echo "phenix" > /etc/hostname
            sed -i 's/127.0.1.1 .*/127.0.1.1 phenix/' /etc/hosts
            cat > /etc/motd <<EOF

            ██████╗ ██╗  ██╗███████╗███╗  ██╗██╗██╗  ██╗
            ██╔══██╗██║  ██║██╔════╝████╗ ██║██║╚██╗██╔╝
            ██████╔╝███████║█████╗  ██╔██╗██║██║ ╚███╔╝
            ██╔═══╝ ██╔══██║██╔══╝  ██║╚████║██║ ██╔██╗
            ██║     ██║  ██║███████╗██║ ╚███║██║██╔╝╚██╗
            ╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚══╝╚═╝╚═╝  ╚═╝

            EOF
            echo "\nBuilt with phenix image on $(date)\n\n" >> /etc/motd
    size: 36G
    variant: mingui
